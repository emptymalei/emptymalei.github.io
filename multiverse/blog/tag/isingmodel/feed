<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>时见疏星 &#187; Ising模型</title>
	<atom:link href="http://multiverse.lamost.org/blog/tag/isingmodel/feed" rel="self" type="application/rss+xml" />
	<link>http://multiverse.lamost.org/blog</link>
	<description>流年暗中偷换</description>
	<lastBuildDate>Tue, 28 Apr 2015 15:55:56 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=4.2.2</generator>
	<item>
		<title>2D Ising Model (Triangle Lattice)</title>
		<link>http://multiverse.lamost.org/blog/564</link>
		<comments>http://multiverse.lamost.org/blog/564#comments</comments>
		<pubDate>Fri, 07 Jan 2011 16:50:16 +0000</pubDate>
		<dc:creator><![CDATA[时见疏星]]></dc:creator>
				<category><![CDATA[万物皆循因果]]></category>
		<category><![CDATA[Ising模型]]></category>
		<category><![CDATA[Monte Carlo]]></category>
		<category><![CDATA[Statistical Physics]]></category>
		<category><![CDATA[物理]]></category>
		<category><![CDATA[疯狂的科学]]></category>

		<guid isPermaLink="false">http://multiverse.lamost.org/blog/?p=564</guid>
		<description><![CDATA[Q: Using the simplest program to calculate the 2D Ising model upon triangle lattice. A: 1. Hamiltonian: [eq]H=J\sum\limits_{i,j}{{s_{i}}{s_{j}}}[/eq] 2. Lattice: 3. Summary image: &#8212;&#8212;CODE&#038;SUMMARY&#8212;&#8212; *PDF file (some results shown in it): 2D_Ising_Model(Triangle) (A little reminder: I am not really working...<div class='yarpp-related-rss'>
<hr />
<big><strong><font color="#ff6600">长程相关文章:</font></strong></big><ol>
<li><a href="http://multiverse.lamost.org/blog/1447" rel="bookmark" title="最近很满意">最近很满意 </a><hr /></li>
<li><a href="http://multiverse.lamost.org/blog/593" rel="bookmark" title="A Brief Summary of Statistical Physics">A Brief Summary of Statistical Physics </a><hr /></li>
<li><a href="http://multiverse.lamost.org/blog/516" rel="bookmark" title="Monte Carlo Investigation of Frustrated Heisenberg Model">Monte Carlo Investigation of Frustrated Heisenberg Model </a><hr /></li>
</ol>
</div>
]]></description>
				<content:encoded><![CDATA[<p>Q: Using the simplest program to calculate the 2D Ising model upon triangle lattice.<br />
A:<br />
1. Hamiltonian:<br />
<center>[eq]H=J\sum\limits_{i,j}{{s_{i}}{s_{j}}}[/eq]</center><br />
2. Lattice:<br />
<div id="attachment_565" style="width: 310px" class="wp-caption aligncenter"><a href="http://multiverse.lamost.org/blog/wp-content/uploads/2011/01/Fig3-Triangle-2D-Ising.jpg"><img src="http://multiverse.lamost.org/blog/wp-content/uploads/2011/01/Fig3-Triangle-2D-Ising-300x297.jpg" alt="Fig3-Triangle-2D-Ising" title="Fig3-Triangle-2D-Ising" width="300" height="297" class="size-medium wp-image-565" /></a><p class="wp-caption-text">Fig3-Triangle-2D-Ising</p></div></p>
<p>3. Summary image:<br />
<div id="attachment_566" style="width: 254px" class="wp-caption aligncenter"><a href="http://multiverse.lamost.org/blog/wp-content/uploads/2011/01/2D_Triangle_Ising_Model.jpg"><img src="http://multiverse.lamost.org/blog/wp-content/uploads/2011/01/2D_Triangle_Ising_Model-244x300.jpg" alt="2D_Triangle_Ising_Model" title="2D_Triangle_Ising_Model" width="244" height="300" class="size-medium wp-image-566" /></a><p class="wp-caption-text">2D_Triangle_Ising_Model</p></div></p>
<p><center>&#8212;&#8212;CODE&#038;SUMMARY&#8212;&#8212;</center><br />
*PDF file (some results shown in it):<br />
<a href='http://multiverse.lamost.org/blog/wp-content/uploads/2011/01/2D_Ising_ModelTriangle.pdf'>2D_Ising_Model(Triangle)</a><br />
(A little reminder: I am not really working on this kind of things. The only reason I did this is that I have to hand in a copy of my homework. So IF U R LOOKING FOR SOME REAL INSPIRING CODES, NEVER STUDY MINE!)</p>
<p>*CODE file (html):<br />
<a href='http://multiverse.lamost.org/blog/wp-content/uploads/2011/01/Triangle-2DIsingModel.c.html'>CODE_2DIsingModel-Triangle</a></p>
<p>My CODE is appended here:<br />
<span id="more-564"></span><br />
/*This program calculates the energy, heat capacity, magnetization, magnetic permitivity.*/<br />
/*Boundary condition: periodic boundary condition.*/<br />
/*In this program, J&#038;k are put into T. To fill it to the expressions, just consider the dimensions.*/</p>
<p>#include <stdio .h><br />
#include <stdlib .h><br />
#include <time .h><br />
#include<br />
<math .h>
<p>#define L 32<br />
#define NGL   100000            /*Samples Neglected*/<br />
#define N_t 5100000         /*Total samples*/<br />
#define N (N_t-NGL)<br />
#define T_i 0.5<br />
#define T_f 10.5<br />
#define Tstep 0.05<br />
#define SIZE_T 500          /*The size of emcx in T axis. Check this before compiling!*/<br />
#define SIZE_R 60           /*The size of emcx in R axis. Check this before compiling!*/<br />
#define R_i -6                      /*Ration of J2/J1. Initial value.*/<br />
#define R_step 0.1              /*step*/<br />
#define R_f 0                   /*End of R*/</p>
<p>int sum_M;<br />
int s[L][L];                            /*Size of the lattice*/<br />
double sum_E;<br />
double T;</p>
<p>struct Obsv<br />
{<br />
    double C;<br />
    double X;<br />
    double M;<br />
    double E;<br />
};</p>
<p>void Inist();<br />
void Mag();<br />
void Energy(double R);<br />
void MCP(double R);<br />
struct Obsv Cac_obsv(double R);</p>
<p>int main()<br />
{<br />
    int i,j;<br />
    double R;<br />
    struct Obsv emcx[SIZE_T][SIZE_R];<br />
    FILE *ft,*fm,*fx,*fc,*fe,*fr;<br />
    fr=fopen(&#8220;R.txt&#8221;,&#8221;w&#8221;);<br />
    ft=fopen(&#8220;T.txt&#8221;,&#8221;w&#8221;);<br />
    fx=fopen(&#8220;X.txt&#8221;,&#8221;w&#8221;);<br />
    fc=fopen(&#8220;C.txt&#8221;,&#8221;w&#8221;);<br />
    fm=fopen(&#8220;M.txt&#8221;,&#8221;w&#8221;);<br />
    fe=fopen(&#8220;E.txt&#8221;,&#8221;w&#8221;);</p>
<p>    R=R_i;<br />
    srand(time(NULL));<br />
    for(j=0;R< =R_f;j++)<br />
    {<br />
        T=T_i;<br />
        for(i=0;T<=T_f;i++)<br />
        {<br />
            Inist();<br />
            emcx[i][j]=Cac_obsv(R);<br />
            fprintf(fr,"%f\n",R);<br />
            fprintf(ft,"%f\n",T);<br />
            fprintf(fx,"%f\n",emcx[i][j].X);<br />
            fprintf(fc,"%f\n",emcx[i][j].C);<br />
            fprintf(fm,"%f\n",emcx[i][j].M);<br />
            fprintf(fe,"%f\n",emcx[i][j].E);<br />
            printf("-------------\n");<br />
            printf("R=%f\n",R);<br />
            printf("T=%f\n",T);<br />
            printf("X=%f\n",emcx[i][j].X);<br />
            printf("C=%f\n",emcx[i][j].C);<br />
            printf("M=%f\n",emcx[i][j].M);<br />
            printf("E=%f\n",emcx[i][j].E);<br />
            T = T+Tstep;<br />
        }<br />
        R+=R_step;<br />
    }<br />
    fclose(ft);<br />
    fclose(fx);<br />
    fclose(fc);<br />
    fclose(fm);<br />
    fclose(fe);<br />
    printf("The End!\n");<br />
}</p>
<p>void Inist()<br />
{<br />
    int i,j;<br />
    for(i=0;i<L;i++)<br />
    {<br />
        for(j=0;j<L;j++)<br />
        {<br />
            s[i][j]=1;<br />
        }<br />
    }<br />
}</p>
<p>void MCP(double R)<br />
{<br />
    int i,j;<br />
    double sum,dE;<br />
    i=rand()%L;<br />
    j=rand()%L;</p>
<p>    sum=s[i][j]*(s[(L+i-1)%L][j]+s[(i+1)%L][j]+s[i][(j-1+L)%L]+s[i][ (j+1)%L]+R*(s[(i+1)%L][(j-1+L)%L]+s[(i-1+L)%L][(j+1)%L]));<br />
    //printf("chk2.sum=%d\n",sum);<br />
    //switch(sum)<br />
    //{<br />
    //  case 4: dE= 8; break;<br />
    //  case 2: dE= 4; break;<br />
    //  case 0: dE= 0; break;<br />
    //  case -2: dE= -4; break;<br />
    //  case -4: dE= -8; break;<br />
    //  default: printf("sum=%d. Attention!\n",sum); break;<br />
    //}</p>
<p>    dE=2*sum;<br />
    if( dE>0 )<br />
    {<br />
        if(((double)rand()/RAND_MAX)< =exp((-1.0)*dE/T))<br />
        {<br />
            s[i][j]=-s[i][j];<br />
            sum_M+=2*s[i][j];<br />
            sum_E+=dE;<br />
        }<br />
    }<br />
    else<br />
    {<br />
        s[i][j]=-s[i][j];<br />
        sum_M+=2*s[i][j];<br />
        sum_E+=dE;<br />
    }<br />
 }</p>
<p>struct Obsv Cac_obsv(double R)<br />
{<br />
    int i;<br />
    double E_avg=0.0;<br />
    double E_as=0.0;<br />
    double M_avg=0.0;<br />
    double M_as=0.0;<br />
    struct Obsv emcx;<br />
    Mag();<br />
    Energy(R);</p>
<p>    for(i=0; i<N_t; i++)<br />
    {<br />
        MCP(R);<br />
        if(i>=NGL)<br />
        {<br />
            E_avg+=(double)sum_E/N;<br />
            E_as+=(double)sum_E*sum_E/N;<br />
            M_avg+=(double)sum_M/N;<br />
            M_as+=(double)sum_M*sum_M/N;<br />
        }<br />
    }<br />
    emcx.E=E_avg;<br />
    emcx.M=M_avg;<br />
    emcx.C=(E_as &#8211; E_avg*E_avg)/T/T;<br />
    emcx.X=(M_as &#8211; M_avg*M_avg)/T;</p>
<p>    return emcx;<br />
}</p>
<p>void Mag()<br />
{<br />
    int i,j;<br />
    int dM_tmp=0;<br />
    for(i=0;i<l ;i++)<br />
    {<br />
        for(j=0;j<L;j++)<br />
            dM_tmp+=s[i][j];<br />
    }<br />
    sum_M=dM_tmp;<br />
}</p>
<p>void Energy(double R)<br />
{<br />
    double dE_tmp=0.0;<br />
    int i,j;<br />
    for(i=0;i<L;i++)<br />
    {<br />
        for(j=0;j<L;j++)<br />
        {<br />
            dE_tmp+=0.5*(s[i][j]*(s[(i-1+L)%L][j]+s[(i+1)%L][j]+s[i][(j-1+L)%L]+s[i][(j+1)%L])+R*s[i][j]*(s[(i+1)%L][(j-1+L)%L]+s[(i-1+L)%L][(j+1)%L]));<br />
    //      printf("chk1.dE_tmp=%f\n",dE_tmp);<br />
        }<br />
    }<br />
    sum_E=dE_tmp;<br />
}</math>
<p></l></math>
<p></time></stdlib></stdio></p>
<div class='yarpp-related-rss'>
<hr /><p><big><strong><font color="#ff6600">长程相关文章:</font></strong></big></p><ol>
<li><a href="http://multiverse.lamost.org/blog/1447" rel="bookmark" title="最近很满意">最近很满意 </a><hr /></li>
<li><a href="http://multiverse.lamost.org/blog/593" rel="bookmark" title="A Brief Summary of Statistical Physics">A Brief Summary of Statistical Physics </a><hr /></li>
<li><a href="http://multiverse.lamost.org/blog/516" rel="bookmark" title="Monte Carlo Investigation of Frustrated Heisenberg Model">Monte Carlo Investigation of Frustrated Heisenberg Model </a><hr /></li>
</ol></p>
</div>
]]></content:encoded>
			<wfw:commentRss>http://multiverse.lamost.org/blog/564/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
